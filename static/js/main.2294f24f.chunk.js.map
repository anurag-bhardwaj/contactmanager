{"version":3,"sources":["Header.js","Contact.js","Contacts.js","AddContact.js","reducers/contactReducer.js","reducers/index.js","Store.js","editContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","prop","class","className","style","marginBottom","branding","to","Contact","state","showinfo","myfunc","e","setState","OnDeleteClick","id","props","deleteContact","this","contact","name","email","phone","padding","textAlign","cursor","onClick","float","bind","Component","connect","dispatch","type","payload","Contacts","getContacts","contacts","map","key","AddContact","onChange","target","value","onSubmit","preventDefault","newContact","uuid","addContact","history","push","OnSubmit","htmlFor","aria-describedby","initialState","combineReducers","action","filter","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","editContact","match","params","console","log","updContact","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iQAyBeA,MArBf,SAAgBC,GACZ,OACI,6BACI,yBAAKC,MAAM,8CACP,yBAAKC,UAAU,aACX,0BAAMA,UAAU,8BAA8BC,MAAO,CAAEC,aAAc,MAAQJ,EAAKK,UAClF,wBAAIJ,MAAM,sBACN,wBAAIC,UAAU,YACV,kBAAC,IAAD,CAAMI,GAAG,IAAIJ,UAAU,2BAA2BC,MAAO,CAAEC,aAAc,MAAzE,WAEJ,wBAAIF,UAAU,mBACV,kBAAC,IAAD,CAAMI,GAAG,QAAQJ,UAAU,2BAA2BC,MAAO,CAAEC,aAAc,MAA7E,a,qCCZtBG,E,4MACFC,MAAM,CACFC,UAAS,G,EAEbC,OAAO,SAAAC,GACH,EAAKC,SAAS,CACdH,UAAU,EAAKD,MAAMC,Y,EAIzBI,cAAc,SAACC,GACX,EAAKC,MAAMC,cAAcF,I,uDAGnB,IACCL,EAAUQ,KAAKT,MAAfC,SADF,EAEwBQ,KAAKF,MAAMG,QAAjCJ,EAFF,EAEEA,GAAIK,EAFN,EAEMA,KAAKC,EAFX,EAEWA,MAAMC,EAFjB,EAEiBA,MACtB,OACI,6BACI,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,YAAYC,MAAO,CAACmB,QAAQ,IAAKC,UAAU,SACtD,yBAAKrB,UAAU,kBAAkBiB,EACjC,0BAAMhB,MAAO,CAACqB,OAAO,WAAYC,QAASR,KAAKP,QAA/C,WACA,0BAAMR,UAAU,OAAOC,MAAO,CAACuB,MAAM,QAASF,OAAO,WAAYC,QAASR,KAAKJ,cAAcc,KAAKV,KAAKH,IAAvG,UACA,kBAAC,IAAD,CAAMZ,UAAU,OAAOC,MAAO,CAACuB,MAAM,QAASF,OAAO,WAAYlB,GAAE,gBAAWQ,IAA9E,YAEfL,EAAY,wBAAIP,UAAU,+BAA8B,wBAAIA,UAAU,mBAAd,UAAwCkB,GAAW,wBAAIlB,UAAU,mBAAd,UAAwCmB,IAAoB,Y,GA1B1JO,aAuCPC,cAAQ,MALG,SAACC,GAAD,MAAa,CACnCd,cAAc,SAACF,GAAD,OAAMgB,EAAS,CAACC,KAAK,iBAAiBC,QAAQlB,QAIjDe,CAAiCtB,GCpC1C0B,E,kLAEEhB,KAAKF,MAAMmB,gB,+BAGL,IACCC,EAAUlB,KAAKF,MAAfoB,SACP,OACI,6BACKA,EAASC,KAAI,SAAAlB,GAAO,OAAI,kBAAC,EAAD,CAASmB,IAAKnB,EAAQJ,GAAII,QAASA,Y,GATrDU,aA0BRC,eAXS,SAACrB,GAAD,MAAU,CAC9B2B,SAAS3B,EAAMU,QAAQiB,aAED,SAACL,GAAD,MAAa,CACnCI,YAAY,kBAAIJ,EAAS,CAACC,KAAK,qBAOpBF,CAA6CI,G,wBC3BtDK,E,4MACF9B,MAAM,CACFW,KAAK,GACLC,MAAM,GACNC,MAAM,I,EAEVkB,SAAS,SAAC5B,GAAD,OACL,EAAKC,SAAL,eACCD,EAAE6B,OAAOrB,KAAM,CAACR,EAAE6B,OAAOC,U,EAE9BC,SAAU,SAAC/B,GACPA,EAAEgC,iBADW,MAEkB,EAAKnC,MAA5BW,EAFK,EAELA,KAAMC,EAFD,EAECA,MAAOC,EAFR,EAEQA,MAEfuB,EAAa,CACf9B,GAAI+B,cACJ1B,OACAC,QACAC,SAEJ,EAAKN,MAAM+B,WAAWF,GACtB,EAAKhC,SAAS,CACVO,KAAM,GACNC,MAAO,GACPC,MAAO,KAEX,EAAKN,MAAMgC,QAAQC,KAAK,M,uDAIlB,IAAD,EACoB/B,KAAKT,MAAvBW,EADF,EACEA,KAAKC,EADP,EACOA,MAAMC,EADb,EACaA,MAClB,OACI,6BACI,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,YAAYC,MAAO,CAAEmB,QAAS,IAAKC,UAAW,SACzD,yBAAKrB,UAAU,kBAAf,eACA,yBAAKA,UAAU,aACX,0BAAMwC,SAAUzB,KAAKgC,UACjB,yBAAK/C,UAAU,cACX,2BAAOgD,QAAQ,QAAf,SACA,2BAAO/B,KAAK,OAAOY,KAAK,OAAO7B,UAAU,eAAeY,GAAG,oBAAoBqC,mBAAiB,YAAYV,MAAOtB,EAAMoB,SAAUtB,KAAKsB,WACxI,2BAAOW,QAAQ,SAAShD,UAAU,QAAlC,UACA,2BAAOiB,KAAK,QAAQY,KAAK,QAAQ7B,UAAU,eAAeY,GAAG,qBAAqBqC,mBAAiB,YAAYV,MAAOrB,EAAOmB,SAAUtB,KAAKsB,WACxI,2BAAOzB,GAAG,YAAYZ,UAAU,wBAAhC,kDACJ,2BAAOgD,QAAQ,QAAQhD,UAAU,OAAjC,UACA,2BAAOiB,KAAK,QAAQY,KAAK,OAAO7B,UAAU,eAAeY,GAAG,qBAAqBqC,mBAAiB,YAAYV,MAAOpB,EAAOkB,SAAUtB,KAAKsB,WAC3I,4BAAQR,KAAK,SAAS7B,UAAU,uBAAuBuB,QAASR,KAAKyB,UAArE,oB,GA/CXd,aA+DVC,cAAQ,MAJG,SAACC,GAAD,MAAa,CACnCgB,WAAW,SAACF,GAAD,OAAcd,EAAS,CAACC,KAAK,cAAcC,QAAQY,QAGnDf,CAAiCS,G,uCCpE1Cc,EAAe,CACjBjB,SAAU,CACN,CACIrB,GAAI,EACJK,KAAM,SACNC,MAAO,+BACPC,MAAO,gBAEX,CACIP,GAAI,EACJK,KAAM,gBACNC,MAAO,8BACPC,MAAO,kBCTJgC,cAAgB,CAC3BnC,QDaW,WAAyC,IAA/BV,EAA8B,uDAAtB4C,EAAcE,EAAQ,uCACnD,OAAQA,EAAOvB,MACX,IAAK,eACD,OAAO,eACAvB,GAEX,IAAK,iBACD,OAAO,2BACAA,GADP,IAEI2B,SAAU3B,EAAM2B,SAASoB,QAAO,SAAArC,GAAO,OAAIA,EAAQJ,KAAOwC,EAAOtB,aAEzE,IAAK,cACD,OAAO,2BACAxB,GADP,IAEI2B,SAAS,GAAD,mBAAM3B,EAAM2B,UAAZ,CAAsBmB,EAAOtB,YAE7C,IAAK,iBACD,OAAO,2BACAxB,GADP,IAEI2B,SAAU3B,EAAM2B,SAASC,KAAI,SAAAlB,GAAO,MAAG,UAAGA,EAAQJ,MAASwC,EAAOtB,QAAQlB,GAAMI,EAAUoC,EAAOtB,QAAWd,OAEpH,QACI,OAAOV,MEjCbgD,EAAY,CAACC,KAOJC,EALFC,YAAYC,EAJL,GAI8BC,YAAQC,IAAe,WAAf,EAAmBN,GAC7EO,OAAOC,8BAAgCD,OAAOC,iCCLxCC,E,4MAEFzD,MAAM,CACFW,KAAK,GACLC,MAAM,GACNC,MAAM,I,EAeVkB,SAAS,SAAC5B,GAAD,OACL,EAAKC,SAAL,eACCD,EAAE6B,OAAOrB,KAAM,CAACR,EAAE6B,OAAOC,U,EAE9BC,SAAU,SAAC/B,GACPA,EAAEgC,iBADW,MAEkB,EAAKnC,MAA5BW,EAFK,EAELA,KAAMC,EAFD,EAECA,MAAOC,EAFR,EAEQA,MAEfuB,EAAa,CACf9B,GAFO,EAAKC,MAAMmD,MAAMC,OAArBrD,GAGHK,OACAC,QACAC,SAEJ,EAAKN,MAAMkD,YAAYrB,GACvB,EAAKhC,SAAS,CACVO,KAAM,GACNC,MAAO,GACPC,MAAO,KAEX,EAAKN,MAAMgC,QAAQC,KAAK,M,kEAhCR,IAAD,OACRlC,EAAIG,KAAKF,MAAMmD,MAAMC,OAArBrD,GACPsD,QAAQC,IAAIvD,GAFG,IAGRqB,EAAUlB,KAAKF,MAAfoB,SACPiC,QAAQC,IAAIlC,GACZA,EAASC,KAAI,SAAAlB,GAAO,MAAG,UAAGA,EAAQJ,MAASA,EAAM,EAAKF,SAAS,CAC3DO,KAAKD,EAAQC,KACbC,MAAMF,EAAQE,MACdC,MAAMH,EAAQG,QACX+C,QAAQC,IAAInD,EAAQJ,GAAGA,Q,+BA2BxB,IAAD,EACoBG,KAAKT,MAAvBW,EADF,EACEA,KAAKC,EADP,EACOA,MAAMC,EADb,EACaA,MAClB,OACI,6BACI,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,YAAYC,MAAO,CAAEmB,QAAS,IAAKC,UAAW,SACzD,yBAAKrB,UAAU,kBAAf,eACA,yBAAKA,UAAU,aACX,0BAAMwC,SAAUzB,KAAKgC,UACjB,yBAAK/C,UAAU,cACX,2BAAOgD,QAAQ,QAAf,SACA,2BAAO/B,KAAK,OAAOY,KAAK,OAAO7B,UAAU,eAAeY,GAAG,oBAAoBqC,mBAAiB,YAAYV,MAAOtB,EAAMoB,SAAUtB,KAAKsB,WACxI,2BAAOW,QAAQ,SAAShD,UAAU,QAAlC,UACA,2BAAOiB,KAAK,QAAQY,KAAK,QAAQ7B,UAAU,eAAeY,GAAG,qBAAqBqC,mBAAiB,YAAYV,MAAOrB,EAAOmB,SAAUtB,KAAKsB,WACxI,2BAAOzB,GAAG,YAAYZ,UAAU,wBAAhC,kDACJ,2BAAOgD,QAAQ,QAAQhD,UAAU,OAAjC,UACA,2BAAOiB,KAAK,QAAQY,KAAK,OAAO7B,UAAU,eAAeY,GAAG,qBAAqBqC,mBAAiB,YAAYV,MAAOpB,EAAOkB,SAAUtB,KAAKsB,WAC3I,4BAAQR,KAAK,SAAS7B,UAAU,uBAAuBuB,QAASR,KAAKyB,UAArE,oB,GA7DVd,aAgFXC,eAHS,SAACrB,GAAD,MAAU,CAC9B2B,SAAS3B,EAAMU,QAAQiB,aALD,SAACL,GAAD,MAAa,CACnCmC,YAAY,SAACK,GAAD,OAAcxC,EAAS,CAACC,KAAK,iBAAiBC,QAAQsC,QAMvDzC,CAA4CoC,GCrD5CM,MApBf,WACE,OACE,kBAAC,IAAD,CAAUb,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKxD,UAAU,OACb,kBAAC,EAAD,CAAQG,SAAS,oBACjB,yBAAKH,UAAU,aACb,uBAAGA,UAAU,mBAAkB,0BAAMA,UAAU,eAAhB,WAA/B,SACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,OAAOC,UAAWpC,IACpC,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,IAAIC,UAAWzC,IACjC,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,YAAYC,UAAWT,UCVnCU,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASX,MACvB,2DCZNY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAMC,c","file":"static/js/main.2294f24f.chunk.js","sourcesContent":["import React from 'react'\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(prop) {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <span className=\"navbar-brand text-danger h1\" style={{ marginBottom: '0' }}>{prop.branding}</span>\r\n                    <ul class=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link h5 text-primary\" style={{ marginBottom: '0' }}> Home </Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <Link to=\"./add\" className=\"nav-link h5 text-primary\" style={{ marginBottom: '0' }}>ADD</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nclass Contact extends Component {\r\n    state={\r\n        showinfo:false\r\n    };\r\n    myfunc=e=>{\r\n        this.setState({\r\n        showinfo:!this.state.showinfo\r\n    });\r\n    }\r\n\r\n    OnDeleteClick=(id)=>{\r\n        this.props.deleteContact(id);\r\n    }\r\n\r\n    render() {\r\n        const {showinfo}=this.state;\r\n        const {id, name,email,phone}=this.props.contact;\r\n        return (\r\n            <div>\r\n                <div className=\"card mt-2\">\r\n                    <div className=\"card-body\" style={{padding:'0', textAlign:'left'}}>\r\n                        <div className=\"card-header h5\">{name}\r\n                        <span style={{cursor:'pointer'}} onClick={this.myfunc}> &#9207;</span>\r\n                        <span className=\"mr-5\" style={{float:'right', cursor:'pointer'}} onClick={this.OnDeleteClick.bind(this,id)}>&#9986;</span>\r\n                        <Link className=\"mr-5\" style={{float:'right', cursor:'pointer'}} to={`/edit/${id}`}>\t&#9999;</Link>\r\n                        </div>\r\n        {showinfo ? (<ul className=\"list-group list-group-flush\"><li className=\"list-group-item\">Email: {email}</li><li className=\"list-group-item\">Phone: {phone}</li></ul>) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps =(dispatch)=>({\r\n    deleteContact:(id)=>dispatch({type:'DELETE_CONTACT',payload:id})\r\n\r\n})\r\n\r\nexport default connect(null,mapDispatchtoProps)(Contact);\r\n\r\n\r\n","import Contact from './Contact.js';\r\nimport React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Contacts extends Component {\r\n    componentDidMount(){\r\n        this.props.getContacts();\r\n    }\r\n\r\n    render() {\r\n        const {contacts}=this.props;\r\n        return (\r\n            <div>\r\n                {contacts.map(contact=> (<Contact key={contact.id} contact={contact} />))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state)=>({\r\n    contacts:state.contact.contacts\r\n})\r\nconst mapDispatchtoProps =(dispatch)=>({\r\n    getContacts:()=>dispatch({type:'GET_CONTACTS'})\r\n\r\n})\r\nContacts.propTypes={\r\ncontacts:PropTypes.array.isRequired,\r\ngetContacts:PropTypes.func.isRequired\r\n}\r\nexport default connect(mapStatetoProps,mapDispatchtoProps) (Contacts);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {v1 as uuid} from 'uuid';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:''\r\n    }\r\n    onChange=(e)=>\r\n        this.setState({\r\n        [e.target.name]:[e.target.value]\r\n    })\r\n    onSubmit =(e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n       \r\n        const newContact = {\r\n            id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        this.props.addContact(newContact);\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n\r\n    render() {\r\n        const {name,email,phone}=this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"card mt-2\">\r\n                    <div className=\"card-body\" style={{ padding: '0', textAlign: 'left' }}>\r\n                        <div className=\"card-header h6\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.OnSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Name\">Name </label>\r\n                                    <input name=\"name\" type=\"text\" className=\"form-control\" id=\"exampleInputName1\" aria-describedby=\"namelHelp\" value={name} onChange={this.onChange}/>\r\n                                    <label htmlFor=\"Email1\" className=\"mt-2\">Email </label>\r\n                                    <input name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value={email} onChange={this.onChange} />\r\n                                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                    <label htmlFor=\"Phone\" className=\"m-2\">Phone </label>\r\n                                    <input name=\"phone\" type=\"text\" className=\"form-control\" id=\"exampleInputPhone1\" aria-describedby=\"PhoneHelp\" value={phone} onChange={this.onChange}/>\r\n                                    <button type=\"submit\" className=\"btn btn-primary mt-3\" onClick={this.onSubmit}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchtoProps =(dispatch)=>({\r\n    addContact:(newContact)=>dispatch({type:'ADD_CONTACT',payload:newContact})\r\n\r\n})\r\nexport default connect(null,mapDispatchtoProps)(AddContact);\r\n","const initialState = {\r\n    contacts: [\r\n        {\r\n            id: 1,\r\n            name: \"Anurag\",\r\n            email: \"anurag.bhardwajcpp@gmail.com\",\r\n            phone: \"111-111-1111\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Golu Bhardwaj\",\r\n            email: \"sgolu.bhardwajcpp@gmail.com\",\r\n            phone: \"222-222-2222\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"GET_CONTACTs\":\r\n            return {\r\n                ...state\r\n            }\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload]\r\n            }\r\n        case \"UPDATE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>`${contact.id}` === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import contactReducer from './contactReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nexport default combineReducers({\r\n    contact :  contactReducer\r\n});","import {createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/';\r\n\r\nconst initialState ={};\r\n\r\nconst middleWare =[thunk];\r\n\r\nconst store= createStore(rootReducer,initialState,compose(applyMiddleware(...middleWare),\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass editContact extends Component {\r\n    \r\n    state={\r\n        name:'',\r\n        email:'',\r\n        phone:''\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id}=this.props.match.params;\r\n        console.log(id);\r\n        const {contacts}=this.props;\r\n        console.log(contacts)\r\n        contacts.map(contact=> `${contact.id}` === id ? (this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        })) : (console.log(contact.id+id)))\r\n    }\r\n\r\n    onChange=(e)=>\r\n        this.setState({\r\n        [e.target.name]:[e.target.value]\r\n    })\r\n    onSubmit =(e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        const {id}=this.props.match.params;\r\n        const newContact = {\r\n            id,\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        this.props.editContact(newContact);\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n\r\n    render() {\r\n        const {name,email,phone}=this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"card mt-2\">\r\n                    <div className=\"card-body\" style={{ padding: '0', textAlign: 'left' }}>\r\n                        <div className=\"card-header h6\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.OnSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"Name\">Name </label>\r\n                                    <input name=\"name\" type=\"text\" className=\"form-control\" id=\"exampleInputName1\" aria-describedby=\"namelHelp\" value={name} onChange={this.onChange}/>\r\n                                    <label htmlFor=\"Email1\" className=\"mt-2\">Email </label>\r\n                                    <input name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value={email} onChange={this.onChange} />\r\n                                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                                    <label htmlFor=\"Phone\" className=\"m-2\">Phone </label>\r\n                                    <input name=\"phone\" type=\"text\" className=\"form-control\" id=\"exampleInputPhone1\" aria-describedby=\"PhoneHelp\" value={phone} onChange={this.onChange}/>\r\n                                    <button type=\"submit\" className=\"btn btn-primary mt-3\" onClick={this.onSubmit}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchtoProps =(dispatch)=>({\r\n    editContact:(updContact)=>dispatch({type:'UPDATE_CONTACT',payload:updContact})\r\n})\r\n\r\nconst mapStatetoProps = (state)=>({\r\n    contacts:state.contact.contacts\r\n})\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(editContact);\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Header.js';\nimport Contacts from './Contacts.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddContact from './AddContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './Store'\nimport editContact from './editContact';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <p className=\"text-primary h1\"><span className=\"text-danger\">Contact</span> List</p>\n            <Switch>\n              <Route exact path=\"/add\" component={AddContact} />\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/edit/:id\" component={editContact} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}